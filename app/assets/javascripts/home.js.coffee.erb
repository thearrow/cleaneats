'use strict'

angular.module('cleanEats', ["ngResource", "leaflet-directive"])
.controller 'cleanCtrl', ($scope, $http) ->
    $scope.isSearching = false
    $scope.locationError = false
    angular.extend $scope,
        markers : []
        center:
            lat: 51.505,
            lng: -0.09,
            zoom: 10
    $scope.apiUrl = "<%= ENV['ROOT_URL'] %>"
    $scope.locationText = ""
    $scope.mapDefaults = {
        tileLayer: "http://{s}.tile.cloudmade.com/<%= ENV['CLOUDMADE_API_KEY'] %>/997/256/{z}/{x}/{y}.png",
        tileLayerOptions:
            opacity: 0.9,
            detectRetina: true,
            reuseTiles: true,
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors,
                      <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>,
                      Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
        maxZoom: 18,
        scrollWheelZoom: true
    }
    $scope.doSearch = ->
        $http.get("/places/search?where=" + $scope.locationText).success($scope.searchSuccess);

    $scope.searchSuccess = (data, status, headers, config) ->
        $scope.setCenter(parseFloat(data.regions[0].latitude), parseFloat(data.regions[0].longitude))

    $scope.setCenter = (lat, lng) ->
        $scope.center =
            lat: lat
            lng: lng
            zoom: 14
        $scope.showPositionMarker()

    $scope.showPositionMarker = ->
        $scope.markers =
            [current_pos =
                lat: $scope.center.lat,
                lng: $scope.center.lng,
                message: "Current Location"]
        $scope.isSearching = true

    $scope.showMap = (position) ->
        $scope.$apply($scope.setCenter(position.coords.latitude, position.coords.longitude))

    $scope.showErorr = ->
        $scope.$apply($scope.locationError = true)

    $scope.getLocation = ->
        navigator.geolocation.getCurrentPosition($scope.showMap, $scope.showErorr)