'use strict'

angular.module('cleanEats', ["ngResource", "leaflet-directive"])
.controller 'cleanCtrl', ($scope, $http) ->
    angular.extend $scope,
        markers : []
        center:
            lat: 51.505,
            lng: -0.09,
            zoom: 10
    $scope.isSearching = false
    $scope.isLoading = false
    $scope.isLocationError = false
    $scope.locationText = ""
    $scope.mapDefaults =
        tileLayer: "http://{s}.tile.cloudmade.com/<%= ENV['CLOUDMADE_API_KEY'] %>/997/256/{z}/{x}/{y}.png",
        tileLayerOptions:
            opacity: 0.9,
            detectRetina: true,
            reuseTiles: true,
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors,
                      <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>,
                      Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
        maxZoom: 18,
        scrollWheelZoom: true

    #bind event to create star ratings on marker click
    $scope.$on 'leafletDirectiveMap.popupopen', (event) ->
        $('#rating-gluten').raty()
        $('#rating-msg').raty()
        $('#rating-dairy').raty()
        $('#rating-vegan').raty()
        $('#rating-vegetarian').raty()
        $('#rating-paleo').raty()
        $('#rating-lowcarb').raty()

    $scope.doTextSearch = ->
        $scope.isLoading = true
        $http.get("/places/search?where=" + $scope.locationText).success($scope.textSearchSuccess)

    $scope.doLatLngSearch = ->
        $scope.isLoading = true
        $http.get("/places/search?lat=" + $scope.center.lat + "&lng=" + $scope.center.lng).success($scope.latLngSearchSuccess)

    $scope.redoSearch = ->
        $scope.showCurrentPositionMarker()
        $scope.doLatLngSearch()

    $scope.textSearchSuccess = (data, status, headers, config) ->
        $scope.isLoading = false
        if data.locations.length > 0
            $scope.setCenter(parseFloat(data.lat), parseFloat(data.lng))
            $scope.showLocationMarkers(data.locations)
        else
            $scope.isLocationError = true

    $scope.latLngSearchSuccess = (data, status, headers, config) ->
        $scope.isLoading = false
        $scope.showLocationMarkers(data.locations)

    $scope.showLocationMarkers = (locations) ->
        angular.forEach locations, (r, key) ->
            $scope.markers.push key =
                lat: parseFloat(r.latitude)
                lng: parseFloat(r.longitude)
                message:
                    "
                    <h3>#{r.name}</h3>
                    <p>
                        <img src=#{r.rating_img_url}>(#{r.review_count} reviews)<br/>
                        <a href=#{r.url}>
                         <img src='http://s3-media3.ak.yelpcdn.com/assets/2/www/img/65526d1a519b/developers/Powered_By_Yelp_Red.png'>
                        </a>
                    </p>
                    <div style='width:220px; height:140px;'>
                        <div class='ratings-left' style='float:left; width:50%;'>
                            Paleo: <div id='rating-paleo'></div>
                            Low-Carb: <div id='rating-lowcarb'></div>
                            Vegetarian: <div id='rating-vegetarian'></div>
                            Vegan: <div id='rating-vegan'></div>
                        </div>
                        <div class='ratings-right' style='float:right; width:50%;'>
                            Gluten-Free: <div id='rating-gluten'></div>
                            MSG-Free: <div id='rating-msg'></div>
                            Dairy-Free: <div id='rating-dairy'></div>
                        </div>
                    </div>
                    "
                icon: L.AwesomeMarkers.icon getIcon(r)

    getIcon = (location) ->
        return icon: 'food', color: 'darkblue'

    $scope.setCenter = (lat, lng) ->
        $scope.center =
            lat: lat
            lng: lng
            zoom: 15
        $scope.showCurrentPositionMarker()

    $scope.showCurrentPositionMarker = ->
        $scope.markers =
            [current_pos =
                lat: $scope.center.lat,
                lng: $scope.center.lng,
                message: "Current Location",
                icon: L.AwesomeMarkers.icon
                    icon: 'male'
                    color: 'red'
            ]
        $scope.isSearching = true

    $scope.geoSuccess = (position) ->
        $scope.$apply(
            $scope.setCenter(position.coords.latitude, position.coords.longitude)
            $scope.doLatLngSearch()
        )

    $scope.geoError = (error) ->
        console.log(error)
        $scope.$apply($scope.isLocationError = true)

    $scope.getLocation = ->
        navigator.geolocation.getCurrentPosition($scope.geoSuccess, $scope.geoError, {enableHighAccuracy: true})